version: "3.8"

services:
  gateway:
    build:
      context: ./gateway/
    container_name: gateway
    ports:
      - 8080:8080
    networks:
      - cloud-network
  eureka:
    build:
      context: ./eureka/
    container_name: eureka
    ports:
      - 8761:8761
    networks:
      - cloud-network
  processing:
    build:
      context: ./processing/
    container_name: processing
    ports:
      - 8081:8081
    networks:
      - cloud-network
  receiver:
    build:
      context: ./receiver/
    container_name: receiver
    ports:
      - 8082:8082
    networks:
      - cloud-network
  mysql:
    container_name: mysqlroot
    image: mysql/mysql-server:latest
    environment:
      - MYSQL_ROOT_PASSWORD=root
#      - MYSQL_USER=root
#      - MYSQL_PASSWORD=root
      - MYSQL_ROOT_HOST=%
    volumes:
      - ./data/mysql:/data/mysql
    ports:
      - "3306:3306"
    networks:
      - cloud-network
#  mongo:
#    image: mongo:latest
#    container_name: isa-mongo
#    environment:
#      - MONGO_INITDB_ROOT_USERNAME=root
#      - MONGO_INITDB_ROOT_PASSWORD=root
#      - MONGO_INITDB_DATABASE=isa_client
#    ports:
#      #     port wewnętrzny mapowany na zewnętrzny
#      #     prawa strona to port w kontenerze, lewa to port mapowany na hoście
#      - 27017:27017
#    volumes:
#      #     mapowanie katalogu, prawa strona to katalog w kontenerze
#      - ./data/db:/data/db
  zookeeper:
    image: zookeeper:3.6.1
    container_name: zookeeper
    restart: always
    networks:
      - cloud-network
    ports:
      - "2181:2181"
    volumes:
      - ./data/zookeeper:/bitnami/zookeeper
  kafka:
    image: wurstmeister/kafka:2.12-2.5.0
    container_name: kafka
    restart: always
    networks:
      - cloud-network
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    volumes:
      - ./data/kafka:/kafka
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER_INTERNAL:PLAINTEXT,DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: DOCKER_INTERNAL://:29092,DOCKER_EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: DOCKER_INTERNAL://kafka:29092,DOCKER_EXTERNAL://127.0.0.1:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_MS: 5000
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 1000
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    ports:
      - 9090:9090
    networks:
      - cloud-network
    volumes:
      - ./data/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - eureka
      - gateway
      - processing
      - receiver
  consul:
    container_name: consul
    image: consul
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    command: agent -server -ui -node=server-1 -bootstrap-expect=1 -client=0.0.0.0
    networks:
      - cloud-network
    volumes:
      - ./data/consul/data:/consul/data
      - ./data/consul/config:/consul/config
networks:
  cloud-network: